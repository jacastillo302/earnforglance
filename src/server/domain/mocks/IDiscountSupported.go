// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IDiscountSupported is an autogenerated mock type for the IDiscountSupported type
type IDiscountSupported[T interface{}] struct {
	mock.Mock
}

// GetID provides a mock function with no fields
func (_m *IDiscountSupported[T]) GetID() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetID")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// SetID provides a mock function with given fields: id
func (_m *IDiscountSupported[T]) SetID(id int) {
	_m.Called(id)
}

// NewIDiscountSupported creates a new instance of IDiscountSupported. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIDiscountSupported[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *IDiscountSupported[T] {
	mock := &IDiscountSupported[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
